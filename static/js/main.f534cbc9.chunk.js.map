{"version":3,"sources":["constants/constants.js","components/ImagesSection/LoadedImage.js","components/ImagesSection/ImageSection.js","metrics/loadFromApi.js","redux/types.js","components/Header/Button.js","components/Header/Header.js","App.js","reportWebVitals.js","redux/imagesReducer.js","redux/rootReducer.js","metrics/send.js","metrics/index.js","index.js"],"names":["module","exports","IMAGES_AMOUNT","MAIN_PAGE","METRICS","dogs","cats","randImages","GUID","LoadedImage","url","className","src","alt","ImageSection","imagesUrls","useSelector","state","images","urls","map","id","key","fetchSomeImages","callback","a","i","push","getDogsUrls","fetch","response","json","data","message","getCatsUrls","getRandomUrls","fetchDogImages","fetchCatImages","fetchRandomImages","Button","props","dispatch_state","useDispatch","clickHandler","timeStart","performance","now","loadImages","type","payload","loadingDuration","window","dispatchEvent","CustomEvent","eventName","detail","onClick","textLabel","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","Counter","this","guid","reqid","page","additional","_inited","_indexes","_countersBatchData","_counterTimerId","counterUrl","prototype","init","setAdditionalParams","additionalParams","Object","assign","send","name","value","clearTimeout","counterData","counterId","requestId","index","self","length","setTimeout","sendBatchRequest","console","warn","JSON","stringify","navigator","sendBeacon","Blob","xhr","XMLHttpRequest","open","metric_counter","String","Math","random","substr","browser","test","userAgent","platform","connectionType","connection","effectiveType","os","language","deviceMemory","getEntriesByType","navigation","connect","round","connectEnd","connectStart","reqRes","responseEnd","requestStart","forEach","entry","startTime","addEventListener","event","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f534cbc9.chunk.js","sourcesContent":["const constants = {\r\n    IMAGES_AMOUNT: 8,\r\n    MAIN_PAGE: \"random_images\",\r\n    METRICS: {\r\n        dogs: \"loadDogsImages\",\r\n        cats: \"loadCatsImages\",\r\n        randImages: \"loadRandomImages\",\r\n    },\r\n    GUID: \"77d20161-ec5b-4cc1-b324-723096f7e4c7\",\r\n};\r\n\r\nmodule.exports = constants;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // GUID: \"23dc66db-ec6f-4314-89f8-f1d2256dfd39\",\r\n","import React, {Fragment} from 'react';\r\n\r\nconst LoadedImage = ({url}) => {\r\n  return (\r\n    <Fragment>\r\n        <div className=\"img__item\">\r\n            <img src={url} alt=\"fetch\"/>\r\n        </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default LoadedImage","import React, {Fragment} from \"react\"\r\nimport {useSelector} from 'react-redux';\r\nimport LoadedImage from './LoadedImage';\r\n\r\n\r\n\r\nconst ImageSection = () => {\r\n  const imagesUrls = useSelector((state) =>  state.images.urls)\r\n\r\n  return (<Fragment>\r\n    <div className={\"images_section\"}>\r\n    {\r\n      imagesUrls.map((url, id) => <LoadedImage url={url} key={id}/> )\r\n    }\r\n    </div>\r\n  </Fragment>)\r\n}\r\n\r\nexport default ImageSection","import {IMAGES_AMOUNT} from \"../constants/constants\";\r\n\r\nasync function fetchSomeImages(callback) {\r\n  let urls = []\r\n\r\n  for (let i = 1; i < IMAGES_AMOUNT + 1; i ++){\r\n    urls.push(await callback())\r\n  }\r\n\r\n  return urls\r\n}\r\n\r\n\r\nconst getDogsUrls = async () => {\r\n  const response = await fetch(`https://dog.ceo/api/breeds/image/random/1`)\r\n  const data = await response.json()\r\n  return data.message[0]\r\n}\r\n\r\nconst getCatsUrls = async () => {\r\n  const response = await fetch(`https://api.thecatapi.com/v1/images/search`)\r\n  const data = await response.json();\r\n  return data[0].url\r\n}\r\n\r\nconst getRandomUrls = async () => {\r\n  const response = await fetch(\"https://picsum.photos/400/400\")\r\n  return response.url\r\n}\r\n\r\n\r\n// получате с внешнего API 8 url изображений собак\r\nexport async function fetchDogImages() {\r\n  return fetchSomeImages(getDogsUrls)\r\n}\r\n\r\n// получате с внешнего API 8 url изображений кошек\r\nexport async function fetchCatImages() {\r\n  return fetchSomeImages(getCatsUrls)\r\n}\r\n\r\n// получате с внешнего API 8 url случацных изображений\r\nexport async function fetchRandomImages() {\r\n  return fetchSomeImages(getRandomUrls)\r\n}\r\n","export const ADD_IMAGE = \"ADD_IMAGE\"","import React, {Fragment, useEffect, useState} from \"react\"\r\nimport {useDispatch} from 'react-redux';\r\nimport {ADD_IMAGE} from '../../redux/types';\r\n\r\n\r\nconst Button = (props) => {\r\n  const dispatch_state = useDispatch()\r\n\r\n  const clickHandler = async () => {\r\n    // засекаем начало загрузки\r\n    let timeStart = performance.now()\r\n\r\n    // ждем пока все запросы придут\r\n    let urls = await props.loadImages()\r\n\r\n    //обновляем список urls для картинок в state\r\n    dispatch_state({type: ADD_IMAGE, payload: {urls}})\r\n\r\n    //получаем время загрузки картинок\r\n    const loadingDuration = performance.now() - timeStart\r\n\r\n    //вызываем событие, которое отправляет статистику на сервер\r\n    window.dispatchEvent(new CustomEvent( props.eventName, {\r\n      detail: {loadingDuration}\r\n    }))\r\n  }\r\n\r\n  return (\r\n      <Fragment>\r\n        <button className={props.className}\r\n        onClick={clickHandler}>{props.textLabel}</button>\r\n      </Fragment>\r\n    )\r\n}\r\n\r\nexport default Button","import React, {Fragment} from 'react';\r\nimport {IMAGES_AMOUNT} from '../../constants/constants';\r\nimport {fetchCatImages, fetchDogImages, fetchRandomImages} from '../../metrics/loadFromApi';\r\nimport Button from './Button';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header\">\r\n        <div className=\"header__btns\">\r\n          <Button className=\"loadDogs\"\r\n                  loadImages={fetchDogImages}\r\n                  eventName = \"onLoadDogsImage\"\r\n                  textLabel={`Load ${IMAGES_AMOUNT} dogs images`}/>\r\n\r\n          <Button className=\"loadCats\"\r\n                  loadImages={fetchCatImages}\r\n                  eventName = \"onLoadCatsImage\"\r\n                  textLabel={`Load ${IMAGES_AMOUNT} cats images`}/>\r\n\r\n          <Button className=\"loadRandoms\"\r\n                  loadImages={fetchRandomImages}\r\n                  eventName = \"onLoadRandomImages\"\r\n                  textLabel={`Load ${IMAGES_AMOUNT} random images`}/>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Header","import './App.css';\r\nimport React, {Fragment} from 'react';\r\nimport ImageSection from './components/ImagesSection/ImageSection';\r\nimport Header from './components/Header/Header';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header/>\r\n      <ImageSection/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {ADD_IMAGE} from './types';\r\n\r\nconst initialState = {\r\n  urls: []\r\n}\r\n\r\nexport const imagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_IMAGE: {\r\n      return {...state, urls: action.payload.urls }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n\r\n}","import {combineReducers} from \"redux\"\r\nimport {imagesReducer} from './imagesReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  images: imagesReducer,\r\n})","/**\r\n * Лимит на число счетчиков в одном запросе\r\n *\r\n * @type {Number}\r\n */\r\nconst MAX_BATCH_COUNTERS = 42;\r\n\r\n/**\r\n * Интервал в миллисекундах, в течение которого счётчики склеиваются\r\n *\r\n * @type {Number}\r\n */\r\nconst COUNTERS_BATCH_TIMEOUT = 15;\r\n\r\nfunction Counter() {\r\n\tthis.guid = '';\r\n\tthis.reqid = '';\r\n\tthis.page = '';\r\n\tthis.additional = {};\r\n\r\n\tthis._inited = false;\r\n\tthis._indexes = {};\r\n\tthis._countersBatchData = [];\r\n\tthis._counterTimerId = null;\r\n\r\n\tthis.counterUrl = 'https://shri.yandex/hw/stat/send';\r\n}\r\n\r\nCounter.prototype.init = function(guid, reqid, page) {\r\n\tif (guid && reqid && page) {\r\n\t\tthis.guid = guid;\r\n\t\tthis.reqid = reqid;\r\n\t\tthis.page = page;\r\n\r\n\t\tthis._inited = true;\r\n\t}\r\n};\r\n\r\nCounter.prototype.setAdditionalParams = function(additionalParams) {\r\n\tthis.additional = Object.assign({}, additionalParams);\r\n};\r\n\r\n/**\r\n * Отправка счётчика. Основной транспорт - sendBeacon, запасной - XMLHttpRequest. Быстро поступающие одиночные события\r\n * накапливаются и отправляются пачками по MAX_BATCH_COUNTERS штук.\r\n *\r\n * @param {String} name\r\n * @param {Number} value\r\n */\r\nCounter.prototype.send = function(name, value) {\r\n\tif (!this._inited) {\r\n\t\tconsole.warn('counter is not inited');\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n    clearTimeout(this._counterTimerId);\r\n\r\n    if (!this._indexes[name]) {\r\n    \tthis._indexes[name] = 0;\r\n    }\r\n\r\n    const counterData = {\r\n\t\t    counterId: this.guid,\r\n\t\t    requestId: this.reqid,\r\n\t\t    page: this.page,\r\n\t\t    name: name,\r\n\t\t    value: value,\r\n\t\t    index: this._indexes[name],\r\n\t\t    additional: this.additional\r\n\t\t},\r\n\r\n\t\tself = this;\r\n\r\n    this._countersBatchData.push(counterData);\r\n\r\n    this._indexes[name]++;\r\n\r\n    if (this._countersBatchData.length < MAX_BATCH_COUNTERS) {\r\n        this._counterTimerId = setTimeout(function() {\r\n        \tself.sendBatchRequest();\r\n        }, COUNTERS_BATCH_TIMEOUT);\r\n    } else {\r\n        self.sendBatchRequest();\r\n    }\r\n};\r\n\r\nCounter.prototype.sendBatchRequest = function() {\r\n    var data = JSON.stringify(this._countersBatchData);\r\n\r\n    this._countersBatchData = [];\r\n    this._counterTimerId = null;\r\n\r\n    var sendBeaconPostAvailable = navigator.sendBeacon,\r\n        sendBeaconResult = sendBeaconPostAvailable && navigator.sendBeacon(this.counterUrl, new Blob([data], {type : 'application/json'}));\r\n\r\n    if (!sendBeaconResult) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('POST', this.counterUrl);\r\n        xhr.send(data);\r\n    }\r\n}\r\n\r\nexport default Counter","import Counter from \"./send\";\r\nimport {MAIN_PAGE, GUID, METRICS} from \"../constants/constants\";\r\n\r\n\r\nconst metric_counter = new Counter();\r\nconst requestId = String(Math.random()).substr(2, 12);\r\n\r\nmetric_counter.init(GUID, requestId, MAIN_PAGE);\r\n\r\nconst getBrowser = () => {\r\n    if (/MSIE/.test(navigator.userAgent)) {\r\n        return \"Internet Explorer\";\r\n    } else if (/Edg/.test(navigator.userAgent)) {\r\n        return \"Edge\";\r\n    } else if (/Firefox/.test(navigator.userAgent)) {\r\n        return \"Firefox\";\r\n    } else if (/Opera/.test(navigator.userAgent)) {\r\n        return \"Opera\";\r\n    } else if (/YaBrowser/.test(navigator.userAgent)) {\r\n        return \"Yandex Browser\";\r\n    } else if (/Chrome/.test(navigator.userAgent)) {\r\n        return \"Google Chrome\";\r\n    } else if (/Safari/.test(navigator.userAgent)) {\r\n        return \"Safari\";\r\n    } else {\r\n        return \"other\";\r\n    }\r\n};\r\nconst getPlatform = () => {\r\n    if (\r\n        /iPhone/.test(navigator.userAgent) ||\r\n        /iPad/.test(navigator.userAgent) ||\r\n        /Android/.test(navigator.userAgent) ||\r\n        /Windows Phone/.test(navigator.userAgent) ||\r\n        /BB10/.test(navigator.userAgent)\r\n    ) {\r\n        return \"touch\";\r\n    } else {\r\n        return \"desktop\";\r\n    }\r\n};\r\n\r\nconst getConnectionType = () => {\r\n    return navigator.connection.effectiveType\r\n    // return string? for example \"4g\"\r\n}\r\n\r\nconst getLanguage = () => {\r\n    return navigator.language\r\n}\r\n\r\nconst getOs = () => {\r\n    return navigator.platform\r\n}\r\n\r\nconst getDeviceMemory = () => {\r\n    return navigator.deviceMemory\r\n}\r\n\r\nmetric_counter.setAdditionalParams({\r\n    browser: getBrowser(),\r\n    platform: getPlatform(),\r\n    connectionType: getConnectionType(),\r\n    os: getOs(),\r\n    language: getLanguage(),\r\n    deviceMemory: getDeviceMemory()\r\n});\r\n\r\nif (window.performance) {\r\n    const [navigation] = window.performance.getEntriesByType(\"navigation\");\r\n\r\n    const connect = Math.round(navigation.connectEnd - navigation.connectStart);\r\n    metric_counter.send(\"connect\", connect);\r\n\r\n    const reqRes = Math.round(navigation.responseEnd - navigation.requestStart);\r\n    metric_counter.send(\"ttfb\", reqRes);\r\n\r\n    setTimeout(function () {\r\n        let performance = window.performance;\r\n        let entries = performance.getEntriesByType(\"paint\");\r\n        entries.forEach((entry) => {\r\n            const { name, startTime } = entry;\r\n            if (name === \"first-contentful-paint\") metric_counter.send(\"fcp\", Math.round(startTime));\r\n            else metric_counter.send(\"fp\", Math.round(startTime));\r\n        });\r\n    }, 3000);\r\n}\r\n\r\nwindow.addEventListener(\"onLoadDogsImage\", (event) => {\r\n    const {loadingDuration} = event.detail\r\n    metric_counter.send(METRICS.dogs, Math.round(loadingDuration))\r\n})\r\n\r\nwindow.addEventListener(\"onLoadCatsImage\", (event) => {\r\n    const {loadingDuration} = event.detail\r\n    metric_counter.send(METRICS.cats, Math.round(loadingDuration))\r\n})\r\n\r\nwindow.addEventListener(\"onLoadRandomImages\", (event) => {\r\n    const {loadingDuration} = event.detail\r\n    metric_counter.send(METRICS.randImages, Math.round(loadingDuration))\r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore} from 'redux';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {rootReducer} from './redux/rootReducer';\r\nimport './style.css';\r\nimport './metrics/index'\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n       <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}